<?php

namespace App\Controller;

use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\Routing\Annotation\Route;
use App\Entity\DemandeDevis;
use App\Entity\Contact;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\Extension\Core\Type\TextType;
use Symfony\Component\Form\Extension\Core\Type\EmailType;
use Symfony\Component\Form\Extension\Core\Type\TelType;
use Symfony\Component\Form\Extension\Core\Type\FileType;
use Symfony\Component\Form\Extension\Core\Type\CheckboxType;
use Symfony\Component\Form\Extension\Core\Type\SubmitType;
use Symfony\Component\Form\Extension\Core\Type\TextareaType;

class DemandeController extends AbstractController
{


     /**
     * @Route("/contact", name="contact")
     */
    public function contact(Request $request ,\Swift_Mailer $mailer)
    {
        $contact=new Contact();
        $form = $this->createFormBuilder($contact)
                ->add('nom',TextType::class,array('attr'=>array('placeholder'=>'Votre nom'),'label'=>false))
                ->add('email',TextType::class,array('attr'=>array('placeholder'=>'Email'),'label'=>false))
                ->add('subject',TextType::class,array('attr'=>array('placeholder'=>'Objet'),'label'=>false))
                ->add('message',TextareaType::class,array('attr'=>array('placeholder'=>'Votre message',),'label'=>false))
                ->add('Envoyer',SubmitType::class,array('attr'=>array('class'=>'btn btn-primary pull-right')))
                ->getForm();
                $form->handleRequest($request);

                  if ($form->isSubmitted() && $form->isValid()) {

                    $contact = $form->getData();
                    $this->sendMailContact($contact,$mailer);
                    $entityManager = $this->getDoctrine()->getManager();
                    $entityManager->persist($contact);
                    $entityManager->flush();
                    
                    return $this->redirectToRoute('home');
                  }
        return $this->render('home/contact.html.twig',array('form'=>$form->createView()));
    }

    /**
     * @Route("/demande", name="devis")
     */
    public function index(Request $request ,\Swift_Mailer $mailer)
    {
        $demande = new DemandeDevis();
                  
        $form = $this->createFormBuilder($demande)
                  ->add('NomSociete',TextType::class,array('label'=>'Nom societÃ© *'))
                  ->add('telephone',TelType::class,array('label'=>'TÃ©lephone *'))
                  ->add('email',EmailType::class,array('label'=>'Email *'))
                  ->add('fichier',FileType::class,array('label'=>'Demande de devis (document pdf) *'))
                  ->add("conditionUtilisation",CheckboxType::class,array('label'=>"j'ai li et j'accepte les conditions d'utilisation"))
                  ->add("recevoirOffrEmail",CheckboxType::class,array('label'=>"je veux recevoir les offres par email"))
                  ->add('Valider',SubmitType::class,array('attr'=>array('class'=>'btn btn-primary btn-block')))
                  ->getForm();

                  $form->handleRequest($request);

                  if ($form->isSubmitted() && $form->isValid()) {

                    $demande = $form->getData();
                    $file = $form->get('fichier')->getData();
                    $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
                    // moves the file to the directory where  the document devis  are stored
                   $file->move(
                   $this->getParameter('demande_devis_directory'),$fileName);
                    $demande->setFichier($fileName);
                    $this->sendMail($demande,$mailer);
                    $entityManager = $this->getDoctrine()->getManager();
                    $entityManager->persist($demande);
                    $entityManager->flush();
                    
                    return $this->redirectToRoute('home');
                  }
        return $this->render('demande/devis.html.twig',array('form'=>$form->createView()));
    }


     /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function sendMail(DemandeDevis $demande , \Swift_Mailer $mailer){
        
    $message = (new \Swift_Message('demande de devis'))
    ->setFrom($demande->getEmail())
    ->setTo('a.chayme1997@gmail.com')
    ->setBody(
        $this->renderView(
            // templates/demande/demande_email.html.twig
            'demande/demande_email.html.twig',
            array('demande' => $demande)
        ),
        'text/html'
    );
    $mailer->send($message);
    }
    public function sendMailContact(Contact $contact , \Swift_Mailer $mailer){
        
        $message = (new \Swift_Message($contact->getSubject()))
        ->setFrom($contact->getEmail())
        ->setTo('a.chayme1997@gmail.com')
        ->setBody(
            $this->renderView(
                // templates/home/contact-email.html.twig
                'home/contact-email.html.twig',
                array('contact' => $contact)
            ),
            'text/html'
        );
        $mailer->send($message);
        }

}
